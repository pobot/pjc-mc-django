# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-04-20 21:53
from __future__ import unicode_literals

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import event.models


class Migration(migrations.Migration):

    replaces = [('event', '0001_initial'), ('event', '0002_auto_20170411_2340'), ('event', '0003_auto_20170412_0007'), ('event', '0004_auto_20170417_1239'), ('event', '0005_auto_20170417_2325'), ('event', '0006_auto_20170419_1248')]

    initial = True

    dependencies = [
        ('teams', '0009_auto_20170403_0127'),
    ]

    operations = [
        migrations.CreateModel(
            name='Planning',
            fields=[
                ('team', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='teams.Team', verbose_name='équipe')),
                ('match1_time', models.TimeField(default=datetime.time(12, 30), validators=[django.core.validators.MinValueValidator(datetime.time(12, 30), message="L'heure de passage doit être après 12:30"), django.core.validators.MaxValueValidator(datetime.time(16, 30), message="L'heure de passage doit être avant 16:30")], verbose_name='match 1')),
                ('match2_time', models.TimeField(default=datetime.time(12, 30), validators=[django.core.validators.MinValueValidator(datetime.time(12, 30), message="L'heure de passage doit être après 12:30"), django.core.validators.MaxValueValidator(datetime.time(16, 30), message="L'heure de passage doit être avant 16:30")], verbose_name='match 2')),
                ('match3_time', models.TimeField(default=datetime.time(12, 30), validators=[django.core.validators.MinValueValidator(datetime.time(12, 30), message="L'heure de passage doit être après 12:30"), django.core.validators.MaxValueValidator(datetime.time(16, 30), message="L'heure de passage doit être avant 16:30")], verbose_name='match 3')),
                ('presentation_time', models.TimeField(default=datetime.time(12, 30), validators=[django.core.validators.MinValueValidator(datetime.time(12, 30), message="L'heure de passage doit être après 12:30"), django.core.validators.MaxValueValidator(datetime.time(16, 30), message="L'heure de passage doit être avant 16:30")], verbose_name='exposé')),
            ],
            options={
                'verbose_name': 'planning équipe',
                'ordering': ['team'],
            },
        ),
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_code', models.PositiveSmallIntegerField(choices=[(0, 'Scratch'), (1, 'Mindstorms'), (2, 'Arduino'), (3, 'RaspberryPi')], default=0, verbose_name='type classement')),
                ('general', models.PositiveSmallIntegerField(default=0, verbose_name='classement général')),
                ('robotics', models.PositiveSmallIntegerField(default=0, verbose_name='classement robotique')),
                ('research', models.PositiveSmallIntegerField(default=0, verbose_name='classement recherche')),
                ('poster', models.PositiveSmallIntegerField(default=0, verbose_name='classement poster')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.Team', verbose_name='équipe')),
            ],
            options={
                'verbose_name': 'classement',
                'ordering': ['type_code', 'team'],
            },
        ),
        migrations.CreateModel(
            name='PlanningControl',
            fields=[
            ],
            options={
                'verbose_name': 'Avancement',
                'proxy': True,
                'verbose_name_plural': 'Avancement',
            },
            bases=('event.planning',),
        ),
        migrations.AlterUniqueTogether(
            name='ranking',
            unique_together=set([('type_code', 'team')]),
        ),
        migrations.AddField(
            model_name='planning',
            name='jury',
            field=models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3')], default='1', max_length=1, validators=[event.models.validate_jury], verbose_name='jury'),
        ),
        migrations.AddField(
            model_name='planning',
            name='match1_table',
            field=models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3')], default='1', max_length=1, validators=[event.models.validate_table], verbose_name='table match 1'),
        ),
        migrations.AddField(
            model_name='planning',
            name='match2_table',
            field=models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3')], default='2', max_length=1, validators=[event.models.validate_table], verbose_name='table match 2'),
        ),
        migrations.AddField(
            model_name='planning',
            name='match3_table',
            field=models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3')], default='3', max_length=1, validators=[event.models.validate_table], verbose_name='table match 3'),
        ),
        migrations.AlterField(
            model_name='planning',
            name='match1_time',
            field=models.TimeField(default=datetime.time(12, 30), validators=[django.core.validators.MinValueValidator(datetime.time(12, 30), message="L'heure de passage doit être après 12:30"), django.core.validators.MaxValueValidator(datetime.time(16, 30), message="L'heure de passage doit être avant 16:30")], verbose_name='horaire match 1'),
        ),
        migrations.AlterField(
            model_name='planning',
            name='match2_time',
            field=models.TimeField(default=datetime.time(12, 30), validators=[django.core.validators.MinValueValidator(datetime.time(12, 30), message="L'heure de passage doit être après 12:30"), django.core.validators.MaxValueValidator(datetime.time(16, 30), message="L'heure de passage doit être avant 16:30")], verbose_name='horaire match 2'),
        ),
        migrations.AlterField(
            model_name='planning',
            name='match3_time',
            field=models.TimeField(default=datetime.time(12, 30), validators=[django.core.validators.MinValueValidator(datetime.time(12, 30), message="L'heure de passage doit être après 12:30"), django.core.validators.MaxValueValidator(datetime.time(16, 30), message="L'heure de passage doit être avant 16:30")], verbose_name='horaire match 3'),
        ),
        migrations.AlterField(
            model_name='planning',
            name='team',
            field=models.OneToOneField(error_messages={'unique': 'Résultat déjà saisi pour cette équipe.'}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='teams.Team', verbose_name='équipe'),
        ),
        migrations.AlterField(
            model_name='planning',
            name='match1_time',
            field=models.TimeField(default=datetime.time(12, 30), validators=[django.core.validators.MinValueValidator(datetime.time(12, 30), message="L'heure de passage doit être après 12:30"), django.core.validators.MaxValueValidator(datetime.time(17, 10), message="L'heure de passage doit être avant 17:10")], verbose_name='horaire match 1'),
        ),
        migrations.AlterField(
            model_name='planning',
            name='match2_time',
            field=models.TimeField(default=datetime.time(12, 30), validators=[django.core.validators.MinValueValidator(datetime.time(12, 30), message="L'heure de passage doit être après 12:30"), django.core.validators.MaxValueValidator(datetime.time(17, 10), message="L'heure de passage doit être avant 17:10")], verbose_name='horaire match 2'),
        ),
        migrations.AlterField(
            model_name='planning',
            name='match3_time',
            field=models.TimeField(default=datetime.time(12, 30), validators=[django.core.validators.MinValueValidator(datetime.time(12, 30), message="L'heure de passage doit être après 12:30"), django.core.validators.MaxValueValidator(datetime.time(17, 10), message="L'heure de passage doit être avant 17:10")], verbose_name='horaire match 3'),
        ),
        migrations.AlterField(
            model_name='planning',
            name='presentation_time',
            field=models.TimeField(default=datetime.time(12, 30), validators=[django.core.validators.MinValueValidator(datetime.time(12, 30), message="L'heure de passage doit être après 12:30"), django.core.validators.MaxValueValidator(datetime.time(17, 10), message="L'heure de passage doit être avant 17:10")], verbose_name='exposé'),
        ),
    ]
